name: Pull Request

on:
  pull_request:
    branches:
      - main

env:
  MAKE_STOP_ON_ERRORS: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Summary Information
        run: |
          echo "# Pull Request Summary" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Pull Request:** ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          echo "**Author:** ${{ github.event.pull_request.user.login }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.event.pull_request.head.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "**Base:** ${{ github.event.pull_request.base.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commits:** ${{ github.event.pull_request.commits }}" >> $GITHUB_STEP_SUMMARY
          echo "**Changed Files:** ${{ github.event.pull_request.changed_files }}" >> $GITHUB_STEP_SUMMARY
          echo "**Additions:** ${{ github.event.pull_request.additions }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deletions:** ${{ github.event.pull_request.deletions }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Tools and versions
        run: |
          echo "## Tools and versions" >> $GITHUB_STEP_SUMMARY

          ubuntu_version=$(lsb_release -a 2>&1 | grep "Description" | awk '{print $2, $3, $4}')
          echo "Ubuntu version: $ubuntu_version"
          echo "**Ubuntu Version:** $ubuntu_version" >> $GITHUB_STEP_SUMMARY

          bash_version=$(bash --version | head -n 1 | awk '{print $4}')
          echo "Bash version: $bash_version"
          echo "**Bash Version:** $bash_version" >> $GITHUB_STEP_SUMMARY

          git_version=$(git --version | awk '{print $3}')
          echo "Git version: $git_version"
          echo "**Git Version:** $git_version" >> $GITHUB_STEP_SUMMARY

          make_version=$(make --version | head -n 1 | awk '{print $3}')
          echo "Make version: $make_version"
          echo "**Make Version:** $make_version" >> $GITHUB_STEP_SUMMARY

          go_version=$(go version | awk '{print $3}')
          echo "Go version: $go_version"
          echo "**Go Version:** $go_version" >> $GITHUB_STEP_SUMMARY

      - name: Lines of code
        run: |
          echo "## Lines of code" >> $GITHUB_STEP_SUMMARY

          go install github.com/boyter/scc/v3@latest
          scc --format html-table . | tee -a $GITHUB_STEP_SUMMARY

      - name: Make build
        run: |
          echo "## Make build" >> $GITHUB_STEP_SUMMARY
          make build | tee -a $GITHUB_STEP_SUMMARY

      - name: Make tests
        run: |
          echo "## Make tests" >> $GITHUB_STEP_SUMMARY
          make test | tee -a $GITHUB_STEP_SUMMARY

      - name: Make test-coverage
        run: |
          echo "## Make test-coverage" >> $GITHUB_STEP_SUMMARY

          make test-coverage | tee -a $GITHUB_STEP_SUMMARY

          # execute again to get the summary
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Coverage report" >> $GITHUB_STEP_SUMMARY
          go-test-coverage --config=./.testcoverage.yml | sed 's/PASS/PASS  ✅/g' | sed 's/FAIL/FAIL  ❌/g' | tee -a $GITHUB_STEP_SUMMARY

      - name: git log
        run: |
          echo "## Git log" >> $GITHUB_STEP_SUMMARY
          git log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%an%C(reset)%C(bold yellow)%d%C(reset) %C(dim white)- %s%C(reset)' -n 10 | tee -a $GITHUB_STEP_SUMMARY